package tech.gaoqilan.a08Regexdemo;

public class RegexDemo11 {
    public static void main(String[] args) {

    /*
        非捕获分组：分组之后不需要再用本组数据，仅仅是把数据抓起来。

        身份证号码：
        410801199308228457x
        518001197609022309
        154041198107053877x
        130133197204039024
        430102197606046442

    */

    // 身份证号码的简单正则表达式，这第一个是默认捕获分组的
        String regex = "[1-9]\\d{16}(\\d|x|X)";

        // 身份证号码的简单正则表达式
        // 非捕获分组: 仅仅是把数据抓起来
        // 标点: 不占用组号
        // 这里\\1报错原因(?：)是非捕获分组，此时是不占用组号的。

        // (?:) (?=) (?!) 都是非捕获分组
        // 更多的使用第一个
        // 这里\\1报错原因(?：)是非捕获分组，此时是不占用组号的。
        String regex1 = "[1-9]\\d{16}(?:\\d|x|X)\\1";
        String regex2 = "[1-9]\\d{16}(\\d|x|X)\\1";

        // 示例的正则表达式
        System.out.println("410801199308228457x".matches(regex1));

    }
}














